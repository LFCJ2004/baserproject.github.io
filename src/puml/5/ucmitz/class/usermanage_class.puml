@startuml
hide circle
skinparam classAttributeIconSize 0

class Server {
  run()
}

class Runner {
  run()
}

class Application {
  handle()
}

class ControllerFactory {
  invoke()
}

class Admin\UsersController {
  + AuthenticationComponent
  + BcMessageComponent 
  ログイン()
  代理ログイン()
  代理ログイン解除()
  ログアウト()
  ユーザー一覧を表示()
  ユーザー新規追加()
  ユーザー編集()
  ユーザー削除()
}

class BcAdminAppController {
  invokeAction()
  render()
}

class BcAdminAppView {
  render()
}

class BcAdminUserHelper {
  ログインユーザー自身の更新かどうか確認()
  更新ができるかどうか確認()
  削除ができるかどうか確認()
  ユーザーグループ選択用のリスト取得()
}

class UserManageService {
  + LoginStoresTable
  ログイン情報をリロードする()
}

class UsersService {
  + UsersTable
}

class UsersServiceInterface {
  作成()
  編集()
  単一データ取得()
  一覧データ取得()
  初期データ取得()
}

class UsersTable {
  ユーザーに関連するよく使う項目を削除する()
  利用可能なユーザーを取得する()
  ユーザーが許可されている認証プレフィックスを取得する()
}

class User {
   + アカウント名
   + パスワード
   + 性
   + 名
   + メールアドレス
   + ニックネーム
   + 登録日
   + 編集日
   管理ユーザーかどうか判定する()
   整形されたユーザー名を取得する()
}

class UserManageServiceInterface {
  更新対象データがログインユーザー自身の更新かどうか確認()
  更新ができるかどうか確認()
  削除できるかどうか確認()
  ログインユーザーが自身のユーザーグループを変更しようとしているかどうか確認()
  ログイン()
  ログアウト()
  認証用のセッションキーを取得()
  再ログイン()
  ログインキーを削除する()
  ログイン状態の保存確認()
  代理ログインを行う()
  代理ログインから元のユーザーに戻る()
  サイト全体の設定値を取得する()
}

Server -right[#Black]-> Runner

Runner -right[#Black]-> Application

Application -right[#Black]-> ControllerFactory

ControllerFactory -right[#Black]-> Admin\UsersController

Admin\UsersController -right[#Black]-> BcAdminAppView
Admin\UsersController -down[#Black]-> UserManageService
Admin\UsersController -up[#Black]-|> BcAdminAppController

BcAdminAppView -down[#Black]-> BcAdminUserHelper

BcAdminUserHelper -left[#Black]-> UserManageService

UserManageService -down[#Black]-|> UsersService
UserManageService --right[dotted,#Black]--|> UserManageServiceInterface

UsersService -down[#Black]-> UsersTable
UsersService -left[dotted,#Black]-|> UsersServiceInterface

UsersTable -down[#Black]-> User

@enduml
